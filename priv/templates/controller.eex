defmodule <%= web_namespace %>.<%= schema %>Controller do
  use <%= web_namespace %>, :controller

  action_fallback <%= web_namespace %>.FallbackController

  alias App.<%= context %>
  alias App.<%= schema %>

<%= if ":index" in methods do %>
  def index(conn, _params) do
    <%= plural %> = <%= context %>.list_<%= plural %>()
    render(conn, "index.json", <%= plural %>: <%= plural %>)
  end
<% end %>

<%= if ":get" in methods do %>
  def show(conn, %{"id" => id}) do
    <%= singular %> = <%= context %>.get_<%= singular %>!(id)
    render(conn, "show.json", <%= singular %>: <%= singular %>)
  end
<% end %>
<%= if ":post" in methods do %>
 def create(conn, %{<%= singular %> => <%= singular %>_params}) do
    with {:ok, %<%= schema%>{} = <%= singular %>} <- <%= context%>.create_<%= singular %>(<%= singular %>_params) do
      conn
      |> put_status(:created)
      |> put_resp_header("location", Routes.Helper.<%= singular %>_path(conn, :show, <%= singular %>))
      |> render("show.json", <%= singular %>: <%= singular %>)
    end
  end
<% end %>
<%= if ":put" in methods do %>
  def update(conn, %{"id" => id, <%= singular %> => <%= singular %>_params}) do
    <%= singular %> = <%= context %>.get_<%= singular %>!(id)

    with {:ok, %<%= schema %>{} = <%= singular %>} <- <%= context %>.update_<%= singular %>(<%= singular %>, <%= singular %>_params) do
      render(conn, "show.json", <%= singular %>: <%= singular %>)
    end
  end
<% end %>
<%= if ":delete" in methods do %>
  def delete(conn, %{"id" => id}) do
    <%= singular %> = <%= context %>.get_<%= singular %>!(id)

    with {:ok, %<%= schema%>{}} <- <%= context%>.delete_<%= singular %>(<%= singular %>) do
      send_resp(conn, :no_content, "")
    end
  end
<% end %>
end
